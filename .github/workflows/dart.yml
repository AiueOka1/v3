name: iOS-ipa-build

on:
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v4

      - name: Select latest Xcode version
        run: |
          # List available Xcode versions and select a stable one
          ls /Applications/ | grep Xcode
          # Use Xcode 15.4 for better SDK compatibility on GitHub runners
          if [ -d "/Applications/Xcode_15.4.app" ]; then
            sudo xcode-select -s /Applications/Xcode_15.4.app/Contents/Developer
            echo "Using Xcode 15.4 for better compatibility"
          elif [ -d "/Applications/Xcode_15.0.app" ]; then
            sudo xcode-select -s /Applications/Xcode_15.0.app/Contents/Developer
            echo "Using Xcode 15.0"
          else
            # Find a stable Xcode 15.x version
            XCODE_15=$(ls /Applications/ | grep "Xcode_15" | sort -V | tail -1)
            if [ -n "$XCODE_15" ]; then
              echo "Using $XCODE_15"
              sudo xcode-select -s /Applications/$XCODE_15/Contents/Developer
            else
              # Fallback to default
              echo "Using default Xcode"
            fi
          fi
          xcode-select -p

      - uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Flutter pub get
        run: flutter pub get

      - name: Show build environment info
        run: |
          echo "=== Build Environment ==="
          xcode-select -p
          xcodebuild -version
          flutter --version

      - name: Precache iOS
        run: flutter precache --ios

      - name: Install iOS runtime and setup
        run: |
          # Accept Xcode license
          sudo xcodebuild -license accept || true

      - name: Set iOS min version to 15.0 (Podfile and project)
        run: |
          if [ -f ".ios/Podfile" ]; then
            sed -i '' "s/platform :ios, '.*'/platform :ios, '15.0'/" .ios/Podfile || true
            echo "Updated Podfile to iOS 15.0"
          fi
          if [ -f ".ios/Runner.xcodeproj/project.pbxproj" ]; then
            sed -i '' -E "s/IPHONEOS_DEPLOYMENT_TARGET = [0-9]+\.[0-9]+/IPHONEOS_DEPLOYMENT_TARGET = 15.0/g" .ios/Runner.xcodeproj/project.pbxproj
            echo "Updated project deployment target to iOS 15.0"
          fi
          
          # Also set the Flutter target iOS version
          if [ -f "ios/Podfile" ]; then
            sed -i '' "s/platform :ios, '.*'/platform :ios, '15.0'/" ios/Podfile || true
          fi

      - name: CocoaPods install
        run: |
          cd .ios
          pod install

      - name: Build iOS (device, unsigned)
        shell: bash
        run: |
          set -e
          
          # Use Flutter build which is more efficient
          flutter build ios --no-codesign --release --verbose
          
          echo "Build completed successfully"

      - name: Package unsigned IPA
        shell: bash
        run: |
          set -euo pipefail
          # Flutter build creates the app in build/ios/iphoneos/
          APP_DIR="build/ios/iphoneos/Runner.app"
          
          if [ ! -d "$APP_DIR" ]; then
            echo "Runner.app not found at expected location: $APP_DIR"
            find build -name "Runner.app" -type d || true
            exit 1
          fi

          cd "$(dirname "$APP_DIR")"
          rm -rf Payload
          mkdir Payload
          cp -R "$(basename "$APP_DIR")" Payload/
          zip -qry FlutterIpaExport-unsigned.ipa Payload

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-unsigned-ipa
          path: build/ios/iphoneos/FlutterIpaExport-unsigned.ipa
